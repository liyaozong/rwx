<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<!-- 继承自AuthorizingRealm的自定义Realm -->
	<bean id="shiroRealm" class="cn.whaleride.utils.ShiroUtils"/>

	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator "/>
    <bean id="cacheSessionDao" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- 设置Session缓存名字，shiro-activeSessionCache值见ehcache.xml里的配置 -->
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
		<!-- 用于生成会话ID，默认就是JavaUuidSessionIdGenerator，使用java.util.UUID生成 -->
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置session过期时间为1小时(单位：毫秒)，默认为30分钟 -->
		<property name="globalSessionTimeout" value="3600000"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionIdUrlRewritingEnabled" value="false"/>
        <property name="sessionDAO" ref="cacheSessionDao"/>
	</bean>
	
	<!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->  
	<!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->  
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionManager" ref="sessionManager"/>
	    <property name="realm" ref="shiroRealm"/>
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <!-- Shiro的核心安全接口,这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"/>  
	    <!-- 要求登录时的链接，不输入地址的话会自动寻找项目web项目的根目录下的”/login.jsp”页面 -->
	    <property name="loginUrl" value="/login"/>
	    <!-- 登录成功后要跳转的连接 -->  
	    <!--<property name="successUrl" value="/index"/>-->
	    <!-- 用户访问未对其授权的资源时,所显示的连接 -->  
	    <property name="unauthorizedUrl" value="/"/>
	    <!-- anon：它对应的过滤器里面是空的,什么都没做 -->
	    <!-- authc：该过滤器下的页面必须验证后才能访问 -->
	    <property name="filterChainDefinitions">  
	        <value>
	        	/static/**=anon
				/vendors/**=anon
				/login=anon
	        	/logout=anon
	        	/captcha.jpg=anon
				/=anon
	        	/**=authc
	        </value>
	    </property>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>